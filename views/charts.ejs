<% include header.ejs -%>
<h3 class="chart_title">Success Rate</h3>

<div class="row overview">
  <div class="col-md-6">
    <h4 class="period">24 Hours</h4>
    <div class="stat col-md-6">
      <div class="name">Successful</div>
      <div class="value text-success">
        <%= sum24h['successful'] < 1 ? 0 : (sum24h['successful'] / sum24h['total'] * 100).toPrecision(3)%>%
        <small><%=sum24h['successful']%></small>
      </div>
    </div>
    <div class="stat col-md-6">
      <div class="name">Failed</div>
      <div class="value text-danger">
        <%= sum24h['failed'] < 1 ? 0 : (sum24h['failed'] / sum24h['total'] * 100).toPrecision(3)%>%
        <small><%=sum24h['failed']%></small>
      </div>
    </div>
  </div>
  <div class="col-md-6">
    <h4 class="period">30 Days</h4>
    <div class="stat col-md-6">
      <div class="name">Successful</div>
      <div class="value text-success">
        <%= sum30d['successful'] < 1 ? 0 : (sum30d['successful'] / sum30d['total'] * 100).toPrecision(3)%>%
        <small><%=sum30d['successful']%></small>
      </div>
    </div>
    <div class="stat col-md-6">
      <div class="name">Failed</div>
      <div class="value text-danger">
        <%= sum30d['failed'] < 1 ? 0 : (sum30d['failed'] / sum30d['total'] * 100).toPrecision(3)%>%
        <small><%=sum30d['failed']%></small>
      </div>
    </div>
  </div>
</div>
<div class="row">
  <canvas id="success_chart" width="1000" height="400"></canvas>
</div>

<hr style="margin: 20px 0 50px" />

<h3 class="chart_title">Platform</h3>

<div class="row overview">
  <div class="col-md-6">
    <h4 class="period">24 Hours</h4>
    <div class="stat col-md-6">
      <div class="name">Android</div>
      <div class="value text-warning">
        <%= sum24h['android'] < 1 ? 0 : (sum24h['android'] / sum24h['total'] * 100).toPrecision(3)%>%
        <small><%=sum24h['android']%></small>
      </div>
    </div>
    <div class="stat col-md-6">
      <div class="name">iOS</div>
      <div class="value text-info">
        <%= sum24h['ios'] < 1 ? 0 : (sum24h['ios'] / sum24h['total'] * 100).toPrecision(3)%>%
        <small><%=sum24h['ios']%></small>
      </div>
    </div>
  </div>
  <div class="col-md-6">
    <h4 class="period">30 Days</h4>
    <div class="stat col-md-6">
      <div class="name">Android</div>
      <div class="value text-warning">
        <%= sum30d['android'] < 1 ? 0 : (sum30d['android'] / sum30d['total'] * 100).toPrecision(3)%>%
        <small><%=sum30d['android']%></small>
      </div>
    </div>
    <div class="stat col-md-6">
      <div class="name">iOS</div>
      <div class="value text-info">
        <%= sum30d['ios'] < 1 ? 0 :(sum30d['ios'] / sum30d['total'] * 100).toPrecision(3)%>%
        <small><%=sum30d['ios']%></small>
      </div>
    </div>
  </div>
</div>

<div class="row">
  <canvas id="platform_chart" width="1000" height="400"></canvas>
</div>

<script>
  var labels = []
    , datasets = {
      'ios': []
    , 'android': []
    , 'successful': []
    , 'failed': []
    , 'total': []
    };

  var aggregations = <%-JSON.stringify(last12h)%>
    , keys = ['ios', 'android', 'successful', 'failed', 'total'];

  for (var i = 0; i < aggregations.length; i++) {
    var hours = new Date(aggregations[i].start_time).getHours()
    labels.unshift(((hours % 12) || 12)+(hours >= 12 ? "pm" : "am"));
    for (var j = 0; j < keys.length; j++) {
      datasets[keys[j]].unshift(aggregations[i][keys[j]]);
    }
  }

  var successChart = newChart({
    id: "success_chart"
  , datasets: [{
      label: "Successful"
    , baseColor: "0,188,140"
    , data: datasets['successful']
    },{
      label: "Failed"
    , baseColor: "231,76,60"
    , data: datasets['failed']
    }]
  });

  var platformChart = newChart({
    id: "platform_chart"
  , datasets: [{
      label: "Android"
    , baseColor: "243,156,18"
    , data: datasets['android']
    },{
      label: "iOS"
    , baseColor: "52,152,219"
    , data: datasets['ios']
    }]
  });

  function newChart(opts) {
    var ctx = document.getElementById(opts.id).getContext("2d");

    var data = { labels: labels, datasets: [] };
    for (var i = 0; i < opts.datasets.length; i++) {
      var dataset = opts.datasets[i];
      data['datasets'].push({
        label: dataset['label']
      , fillColor: "rgba("+dataset['baseColor']+",0.1)"
      , strokeColor: "rgba("+dataset['baseColor']+",1)"
      , pointColor: "rgba("+dataset['baseColor']+",1)"
      , pointStrokeColor: "#fff"
      , pointHighlightFill: "#fff"
      , pointHighlightStroke: "rgba("+dataset['baseColor']+",1)"
      , data: dataset['data']
      });
    }

    var options = {
      responsive : true
    , scaleFontFamily: "Lato"
    , tooltipFillColor: "rgba(30,30,30,0.8)"
    , tooltipTitleFontColor: "#eee"
    , tooltipTitleFontFamily: "Lato"
    , tooltipTitleFontSize: 13
    , tooltipFontColor: "#eee"
    , tooltipFontFamily: "Lato"
    , tooltipFontSize: 12
    , tooltipCornerRadius: 6
    , multiTooltipTemplate: "<%- multiTooltipTemplate %>"
    , tooltipCaretSize: 20
    , tooltipYPadding: 6
    , tooltipXPadding: 8
    };

    return new Chart(ctx).Line(data, options);
  }
</script>
<% include footer.ejs -%>
